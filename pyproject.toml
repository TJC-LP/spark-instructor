[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "spark-instructor"
version = "0.2.3"
description = "A library for building structured LLM responses with Spark"
readme = "README.md"
license = "MIT"
authors = ["Richie Caputo <rcaputo3@tjclp.com>"]
classifiers = [
   "License :: OSI Approved :: MIT License",
]
repository = "https://github.com/TJC-LP/spark-instructor"
homepage = "https://github.com/TJC-LP/spark-instructor"
documentation = "https://tjc-lp.github.io/spark-instructor/"

[tool.poetry.dependencies]
python = "^3.10,<4.0.0"
async-timeout =  "^4.0.3"
pandas = ">=1.5.3"
instructor = "^1.3.4,<=1.5.1"
python-dotenv = "^1.0.1"
sparkdantic = "^1.1.0"
pyarrow = ">=8.0.0"
databricks-connect = { version = "^15.0.0,<=15.3.2", optional = true }
databricks-sdk = { version = "^0.29.0", optional = true }
anthropic = { version = "^0.35.0", optional = true }

[tool.poetry.dev-dependencies]
black = {version = "^24.4.2", extras = ["jupyter"]}
flake8 = "^7.1.0"
Flake8-pyproject = "^1.2.3"
mypy = "^1.11.2"
isort = "^5.13.2"
pandas-stubs = "^2.2.2.240603"
pre-commit = "^3.2.1"
pydocstyle = "^6.3.0"
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
safety = "^3.2.4"
sphinx = "^7.3.7"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.4"
mkdocs-gen-files = ">=0.4,<0.6"
mkdocs-literate-nav = "^0.6.0"
mkdocs-section-index = "^0.3.9"
mkdocstrings = { extras = ["python"], version = ">=0.20,<0.26" }
mkautodoc = "^0.2.0"
pymdown-extensions = "^10.0.1"

[tool.mypy]
mypy_path = "stubs"

[tool.poetry.extras]
databricks = ["databricks-connect", "databricks-sdk"]
anthropic = ["anthropic"]

[tool.poetry.group.databricks.dependencies]
databricks-connect = { version = "^15.1.0.dev0", optional = true }
databricks-sdk = { version = "^0.29.0", optional = true }

[tool.poetry.group.anthropic.dependencies]
anthropic = { version = "^0.35.0", optional = true }

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 120

[tool.pydocstyle]
convention = "google"

[tool.poetry.scripts]
lint = "scripts.lint:main"
